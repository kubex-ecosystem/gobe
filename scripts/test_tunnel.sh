#!/bin/bash

# Script de teste para o controller de t√∫nel GDBase
BASE_URL="http://localhost:8080"

echo "=== GDBase Tunnel Controller Test ==="
echo ""

# Fun√ß√£o para fazer requisi√ß√µes
make_request() {
    local method=$1
    local endpoint=$2
    local data=$3

    echo "üîÑ $method $endpoint"
    if [ -n "$data" ]; then
        echo "üì¶ Data: $data"
        curl -s -X "$method" "$BASE_URL$endpoint" \
             -H "Content-Type: application/json" \
             -d "$data" | jq '.' 2>/dev/null || echo "Response received"
    else
        curl -s -X "$method" "$BASE_URL$endpoint" \
             -H "Content-Type: application/json" | jq '.' 2>/dev/null || echo "Response received"
    fi
    echo ""
}

# 1. Verificar status inicial
echo "1Ô∏è‚É£  Verificando status inicial do t√∫nel:"
make_request "GET" "/api/v1/mcp/db/tunnel/status"

# 2. Criar t√∫nel quick
echo "2Ô∏è‚É£  Criando t√∫nel quick para PgAdmin:"
make_request "POST" "/api/v1/mcp/db/tunnel/up" '{
    "mode": "quick",
    "network": "gdbase_net",
    "target": "pgadmin",
    "port": 80,
    "timeout": "30s"
}'

# 3. Verificar status ap√≥s cria√ß√£o
echo "3Ô∏è‚É£  Verificando status ap√≥s cria√ß√£o:"
make_request "GET" "/api/v1/mcp/db/tunnel/status"

# 4. Tentar criar outro t√∫nel (deve dar conflito)
echo "4Ô∏è‚É£  Tentando criar outro t√∫nel (deve dar conflito):"
make_request "POST" "/api/v1/mcp/db/tunnel/up" '{
    "mode": "quick",
    "target": "postgres",
    "port": 5432
}'

# 5. Parar o t√∫nel
echo "5Ô∏è‚É£  Parando o t√∫nel:"
make_request "POST" "/api/v1/mcp/db/tunnel/down"

# 6. Verificar status final
echo "6Ô∏è‚É£  Verificando status final:"
make_request "GET" "/api/v1/mcp/db/tunnel/status"

# 7. Exemplo de t√∫nel named
echo "7Ô∏è‚É£  Exemplo de t√∫nel named (precisa de token v√°lido):"
make_request "POST" "/api/v1/mcp/db/tunnel/up" '{
    "mode": "named",
    "network": "gdbase_net",
    "token": "your-cloudflare-tunnel-token-here"
}'

echo "‚úÖ Teste conclu√≠do!"
echo ""
echo "üìù Endpoints dispon√≠veis:"
echo "   GET  /api/v1/mcp/db/tunnel/status   - Status do t√∫nel"
echo "   POST /api/v1/mcp/db/tunnel/up       - Criar t√∫nel"
echo "   POST /api/v1/mcp/db/tunnel/down     - Parar t√∫nel"
echo ""
echo "üîß Modos suportados:"
echo "   quick - T√∫nel HTTP ef√™mero (URL din√¢mica)"
echo "   named - T√∫nel HTTP+TCP fixo (requer token Cloudflare)"
